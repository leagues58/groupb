<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <meta charset="utf-8">
    <meta name="description" content="spelling bee with groups">
    <meta name="author" content="eric reeves">

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="css/bulma.min.css">

    <style>
      div {
        //border: solid black 1px;
      }
      .collapsible {
        border: none;
        text-align: left;
        outline: none;
      }

      .collapsible:after {
        color: white;
        font-weight: bold;
        float: right;
        margin-left: 5px;
      }

      .rules {
        padding: 0 18px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
        background-color: #f1f1f1;
      }
      .input {
        width: 80%
      }
      div {
        //border: solid black 1px;
      }

      .title {
        text-align: right;
      }
    </style>
  </head>

  <body>

    <div class="container" style="margin-top: 20px;">
      <div class="columns">
        <div class="column">
          <h2 class="title is-1 title"><%= title %></h2>
        </div>
        <div class="column"></div>
          <button class="collapsible button is-primary">Rules</button>
          <div class="rules">
            <ol>
              <li>You must use the center letter</li>
              <li>Words must be > 3 letters long</li>
              <li>Words cannot be proper nouns or use hyphens</li>
            </ol>
          </div>
        </div>
        <div class="column"></div>
      </div>
    </div>

    <div class="container" style="margin-top: 20px;">
      <div class="columns">
        <div class="column"></div>
        <div class="column is-two-thirds">
          <input type="text" class="input" id="guess-input">
          <input type="submit" onclick="sendGuess()" class="button is-link">
        </div>
        <div class="column"></div>
      </div>
    </div>

    <div class="container" style="margin-top: 20px;">
      <div class="columns">
        <div class="column"></div>
        <div class="column is-two-thirds">
          <table id="word-table" class="table">
            <thead>
              <tr><th>Word List (<span id="found-words-count"><%=foundWords.length%></span>/<%=totalWordsCount%>)</th></tr>
            </thead>
            <tbody>
              <%if (foundWords) {%>
                <%for (let i=0; i<foundWords.length; i++) {%>
                  <tr><td><%=foundWords[i]%></td></tr>
                <%}%>
              <%}%>
            </tbody>
          </table>
        </div>
        <div class="column"></div>
      </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();

      socket.on('answerFound', function (data) {
        let table = document.getElementById("word-table");
        deleteRows(table);
        let foundWords = data.foundWords;
        for (let word of foundWords) {
          let row = table.insertRow();
          let cell = row.insertCell();
          cell.innerHTML = word;
        }

        document.getElementById('found-words-count').innerHTML = data.foundWords.length; 
      });
      socket.on('alreadyFound', function (data) {
        let table = document.getElementById("word-table");
        for (let i = 0;  i < table.rows.length; i++) {
          if (table.rows[i].cells[0].innerHTML == data) {
            flashRed(table.rows[i].cells[0]);
          }
        }
      });

      window.addEventListener('keydown', function(event) {
          if (event.key == 'Enter') {
            sendGuess();
          }
      });

      function sendGuess() {
        const guess = document.getElementById('guess-input').value;
        document.getElementById('guess-input').value = '';
        if (guess != '') {
          console.log('sending ' + guess);
          socket.emit('guess', guess);
        }
      }

      function deleteRows(table) {
        let rowCount = table.rows.length
        while (table.rows.length > 1) {
          table.deleteRow(1);
        }
      }

      function flashRed(cell) {
        cell.style.backgroundColor = "red";
        setTimeout(function(){ cell.style.backgroundColor = "white"; }, 600);
      }


      var coll = document.getElementsByClassName("collapsible");
      for (let i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function() {
          this.classList.toggle("active");
          var content = this.nextElementSibling;
          if (content.style.maxHeight){
            content.style.maxHeight = null;
          } else {
            content.style.maxHeight = content.scrollHeight + "px";
          } 
        });
      }

    </script>

  </body>
</html>
